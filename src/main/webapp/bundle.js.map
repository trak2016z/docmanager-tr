{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 2cbde0a9804d16c2565a","webpack:///./scripts/App.ts","webpack:///./scripts/view/RegisterView.ts","webpack:///./scripts/utils/UserValidator.ts","webpack:///./scripts/services/RegisterService.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","RegisterView_1","App","window","onload","currentView","openedSite","location","toString","split","pop","RegisterView","RegisterService_1","UserValidator_1","this","userValidator","UserValidator","init","prototype","_this","form","$","registerButton","find","encryptor","jsSHA","registerFailedModal","registerSuccededModal","emailInput","passwordInput","firstNameInput","middleNameInput","lastNameInput","dobInput","phoneInput","change","click","data","getDataFromForm","isValid","validateData","encryptPassword","RegisterService","registerUser","href","modal","userData","update","password","encryptedPw","getHash","email","val","firstName","lastName","phone","dob","middlename","middleName","validateEmail","validateDob","validatePassword","validateFirstName","validateLastName","validatePhone","warn","text","phoneNumber","length","isEmailValid","checkAvailableEmail","item","emailParts","domainParts","user","successHandler","failHandler","ajax","url","context","document","body","type","contentType","dataType","async","JSON","stringify","done","fail","handler"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/// <reference path=\"../typings/index.d.ts\" />\r\n\t//@ sourceMappingUrl=../bundle.js.map\r\n\tvar RegisterView_1 = __webpack_require__(1);\r\n\tvar App = (function () {\r\n\t    function App() {\r\n\t    }\r\n\t    return App;\r\n\t}());\r\n\texports.App = App;\r\n\twindow.onload = function () {\r\n\t    var openedSite = window.location.toString().split(\"/\").pop();\r\n\t    var currentView;\r\n\t    switch (openedSite) {\r\n\t        case 'register':\r\n\t            currentView = new RegisterView_1.RegisterView();\r\n\t            break;\r\n\t    }\r\n\t};\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar RegisterService_1 = __webpack_require__(3);\r\n\tvar UserValidator_1 = __webpack_require__(2);\r\n\tvar RegisterView = (function () {\r\n\t    function RegisterView() {\r\n\t        this.userValidator = new UserValidator_1.UserValidator();\r\n\t        this.init();\r\n\t    }\r\n\t    RegisterView.prototype.init = function () {\r\n\t        var _this = this;\r\n\t        this.form = $('#form-register');\r\n\t        this.registerButton = this.form.find('.form-register-button');\r\n\t        this.encryptor = new jsSHA('SHA-512', \"TEXT\");\r\n\t        this.registerFailedModal = $('#registerFailedModal');\r\n\t        this.registerSuccededModal = $('#registerSuccededModal');\r\n\t        this.emailInput = this.form.find('.email-edit');\r\n\t        this.passwordInput = this.form.find('.pw-edit');\r\n\t        this.firstNameInput = this.form.find('.fname-edit');\r\n\t        this.middleNameInput = this.form.find('.mname-edit');\r\n\t        this.lastNameInput = this.form.find('.lname-edit');\r\n\t        this.dobInput = this.form.find('.dob-edit');\r\n\t        this.phoneInput = this.form.find('.phone-edit');\r\n\t        this.emailInput.change();\r\n\t        this.registerButton.click(function () {\r\n\t            var data = _this.getDataFromForm();\r\n\t            var isValid = _this.validateData(data);\r\n\t            if (isValid) {\r\n\t                data = _this.encryptPassword(data);\r\n\t                RegisterService_1.RegisterService.registerUser(data, function () {\r\n\t                    _this.registerSuccededModal.find('.succededbtn').click(function () {\r\n\t                        window.location.href = window.location.href + '/..';\r\n\t                    });\r\n\t                    _this.registerSuccededModal.modal('toggle');\r\n\t                }, function () {\r\n\t                    _this.registerFailedModal.modal('toggle');\r\n\t                });\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    RegisterView.prototype.encryptPassword = function (userData) {\r\n\t        this.encryptor.update(userData.password);\r\n\t        var encryptedPw = this.encryptor.getHash(\"HEX\");\r\n\t        userData.password = encryptedPw;\r\n\t        return userData;\r\n\t    };\r\n\t    RegisterView.prototype.getDataFromForm = function () {\r\n\t        var email = this.emailInput.val();\r\n\t        var password = this.passwordInput.val();\r\n\t        var firstName = this.firstNameInput.val();\r\n\t        var lastName = this.lastNameInput.val();\r\n\t        var phone = this.phoneInput.val();\r\n\t        var dob = this.dobInput.val();\r\n\t        var middlename = this.middleNameInput.val();\r\n\t        var data = {\r\n\t            dob: dob,\r\n\t            firstName: firstName,\r\n\t            password: password,\r\n\t            lastName: lastName,\r\n\t            phone: phone,\r\n\t            email: email,\r\n\t            middleName: middlename\r\n\t        };\r\n\t        return data;\r\n\t    };\r\n\t    RegisterView.prototype.validateData = function (userData) {\r\n\t        var isValid = true;\r\n\t        if (!this.validateEmail(userData.email)) {\r\n\t            isValid = false;\r\n\t        }\r\n\t        if (!this.validateDob(userData.dob)) {\r\n\t            isValid = false;\r\n\t        }\r\n\t        if (!this.validatePassword(userData.password)) {\r\n\t            isValid = false;\r\n\t        }\r\n\t        if (!this.validateFirstName(userData.firstName)) {\r\n\t            isValid = false;\r\n\t        }\r\n\t        if (!this.validateLastName(userData.lastName)) {\r\n\t            isValid = false;\r\n\t        }\r\n\t        if (!this.validatePhone(userData.phone)) {\r\n\t            isValid = false;\r\n\t        }\r\n\t        return isValid;\r\n\t    };\r\n\t    RegisterView.prototype.validateFirstName = function (firstName) {\r\n\t        var warn = this.form.find('.fname-group .fname-warn');\r\n\t        warn.text('');\r\n\t        if (!firstName) {\r\n\t            warn.text('Nie podano imienia');\r\n\t            return false;\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t    RegisterView.prototype.validateLastName = function (lastName) {\r\n\t        var warn = this.form.find('.lname-group .lname-warn');\r\n\t        warn.text('');\r\n\t        if (!lastName) {\r\n\t            warn.text('Nie podano nazwiska');\r\n\t            return false;\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t    RegisterView.prototype.validatePhone = function (phoneNumber) {\r\n\t        var warn = this.form.find('.phone-group .phone-warn');\r\n\t        warn.text('');\r\n\t        if (!phoneNumber) {\r\n\t            warn.text('Nie podano numeru telefonu');\r\n\t            return false;\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t    RegisterView.prototype.validateDob = function (dob) {\r\n\t        var warn = this.form.find('.dob-group .dob-warn');\r\n\t        warn.text('');\r\n\t        if (!dob) {\r\n\t            warn.text('Nie podano daty urodzenia');\r\n\t            return false;\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t    RegisterView.prototype.validatePassword = function (password) {\r\n\t        var warn = this.form.find('.pw-group .pw-warn');\r\n\t        if (!password) {\r\n\t            warn.text('Nie podano hasła');\r\n\t            return false;\r\n\t        }\r\n\t        else if (password.length < 8) {\r\n\t            warn.text('Hasło jest za ktotkie');\r\n\t            return false;\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t    RegisterView.prototype.validateEmail = function (email) {\r\n\t        var warn = this.form.find('.email-group .email-warn');\r\n\t        warn.text('');\r\n\t        if (!email) {\r\n\t            warn.text('Brak adresu email');\r\n\t            return false;\r\n\t        }\r\n\t        if (!this.userValidator.isEmailValid(email)) {\r\n\t            warn.text('Nieprawidłowy adres');\r\n\t            return false;\r\n\t        }\r\n\t        RegisterService_1.RegisterService.checkAvailableEmail(email, function (item) {\r\n\t            warn.text('Adres zajęty');\r\n\t            return !item;\r\n\t        });\r\n\t        return true;\r\n\t    };\r\n\t    return RegisterView;\r\n\t}());\r\n\texports.RegisterView = RegisterView;\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar UserValidator = (function () {\r\n\t    function UserValidator() {\r\n\t    }\r\n\t    UserValidator.prototype.isEmailValid = function (email) {\r\n\t        var emailParts = email.split('@');\r\n\t        if (emailParts.length !== 2) {\r\n\t            return false;\r\n\t        }\r\n\t        var domainParts = emailParts[1].split('.');\r\n\t        if (domainParts.length < 2) {\r\n\t            return false;\r\n\t        }\r\n\t        // let regexp = new RegExp('[a-z][A-Z][0-9]','gi')\r\n\t        // let permittedSymbols = email.match('');\r\n\t        return true;\r\n\t    };\r\n\t    return UserValidator;\r\n\t}());\r\n\texports.UserValidator = UserValidator;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar RegisterService = (function () {\r\n\t    function RegisterService() {\r\n\t    }\r\n\t    RegisterService.registerUser = function (user, successHandler, failHandler) {\r\n\t        var request = $.ajax({\r\n\t            url: 'register/registerUser',\r\n\t            context: document.body,\r\n\t            type: 'POST',\r\n\t            contentType: 'application/json; charset=utf-8',\r\n\t            dataType: 'text',\r\n\t            async: false,\r\n\t            data: JSON.stringify(user)\r\n\t        }).done(successHandler).fail(failHandler);\r\n\t    };\r\n\t    RegisterService.checkAvailableEmail = function (email, handler) {\r\n\t        var request = $.ajax({\r\n\t            url: 'register/userAvailable',\r\n\t            context: document.body,\r\n\t            type: 'GET',\r\n\t            contentType: 'application/json; charset=utf-8',\r\n\t            dataType: 'text',\r\n\t            async: false,\r\n\t            data: 'email=' + email\r\n\t        }).done(handler);\r\n\t    };\r\n\t    return RegisterService;\r\n\t}());\r\n\texports.RegisterService = RegisterService;\r\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2cbde0a9804d16c2565a","/// <reference path=\"../typings/index.d.ts\" />\r\n//@ sourceMappingUrl=../bundle.js.map\r\nimport { RegisterView } from './view/RegisterView';\r\nimport * as jQuery from \"jquery\"\r\nexport class App {\r\n    constructor() {\r\n    }\r\n\r\n}\r\nwindow.onload = () => {\r\n    var openedSite = window.location.toString().split(\"/\").pop();\r\n    var currentView;\r\n    switch (openedSite) {\r\n        case 'register' : \r\n        currentView = new RegisterView();\r\n        break;\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/App.ts","import { RegisteredUser } from '../model/RegisteredUser';\r\nimport { RegisterService } from '../services/RegisterService';\r\nimport { UserValidator } from '../utils/UserValidator';\r\nexport class RegisterView {\r\n    private form: JQuery;\r\n    private registerButton: JQuery;\r\n    private encryptor;\r\n    private registerFailedModal: JQuery;\r\n    private registerSuccededModal: JQuery;\r\n    private inputs: any;\r\n    private userValidator: UserValidator;\r\n\r\n    private emailInput: JQuery;\r\n    private passwordInput: JQuery;\r\n    private firstNameInput: JQuery;\r\n    private middleNameInput: JQuery;\r\n    private lastNameInput: JQuery;\r\n    private dobInput: JQuery;\r\n    private phoneInput: JQuery;\r\n\r\n    constructor() {\r\n        this.userValidator = new UserValidator();\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        this.form = $('#form-register');\r\n        this.registerButton = this.form.find('.form-register-button');\r\n        this.encryptor = new jsSHA('SHA-512', \"TEXT\");\r\n        this.registerFailedModal = $('#registerFailedModal');\r\n        this.registerSuccededModal = $('#registerSuccededModal');\r\n\r\n        this.emailInput = this.form.find('.email-edit');\r\n        this.passwordInput = this.form.find('.pw-edit');\r\n        this.firstNameInput = this.form.find('.fname-edit');\r\n        this.middleNameInput = this.form.find('.mname-edit');\r\n        this.lastNameInput = this.form.find('.lname-edit');\r\n        this.dobInput = this.form.find('.dob-edit');\r\n        this.phoneInput = this.form.find('.phone-edit');\r\n\r\n        this.emailInput.change()\r\n\r\n        this.registerButton.click(() => {\r\n\r\n            let data = this.getDataFromForm();\r\n            let isValid = this.validateData(data);\r\n            if (isValid) {\r\n                data = this.encryptPassword(data);\r\n                RegisterService.registerUser(data, () => {\r\n                    this.registerSuccededModal.find('.succededbtn').click(() => {\r\n                        window.location.href = window.location.href + '/..';\r\n                    });\r\n                    this.registerSuccededModal.modal('toggle');\r\n                }, () => {\r\n                    this.registerFailedModal.modal('toggle');\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private encryptPassword(userData: RegisteredUser): RegisteredUser {\r\n        this.encryptor.update(userData.password);\r\n        let encryptedPw = this.encryptor.getHash(\"HEX\");\r\n        userData.password = encryptedPw;\r\n        return userData;\r\n    }\r\n\r\n    private getDataFromForm(): RegisteredUser {\r\n\r\n        let email: string = this.emailInput.val();\r\n        let password: string = this.passwordInput.val();\r\n        let firstName: string = this.firstNameInput.val();\r\n        let lastName: string = this.lastNameInput.val();\r\n        let phone: string = this.phoneInput.val();\r\n        let dob: Date = this.dobInput.val();\r\n        let middlename: string = this.middleNameInput.val();\r\n        let data: RegisteredUser = {\r\n            dob: dob,\r\n            firstName: firstName,\r\n            password: password,\r\n            lastName: lastName,\r\n            phone: phone,\r\n            email: email,\r\n            middleName: middlename\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    private validateData(userData: RegisteredUser): boolean {\r\n\r\n        let isValid = true;\r\n        if (!this.validateEmail(userData.email)) {\r\n            isValid = false;\r\n        }\r\n        if (!this.validateDob(userData.dob)) {\r\n            isValid = false;\r\n        }\r\n        if (!this.validatePassword(userData.password)) {\r\n            isValid = false;\r\n        }\r\n        if (!this.validateFirstName(userData.firstName)) {\r\n            isValid = false;\r\n        }\r\n        if (!this.validateLastName(userData.lastName)) {\r\n            isValid = false;\r\n        }\r\n        if (!this.validatePhone(userData.phone)) {\r\n            isValid = false;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    private validateFirstName(firstName) {\r\n        let warn = this.form.find('.fname-group .fname-warn');\r\n        warn.text('');\r\n        if (!firstName) {\r\n            warn.text('Nie podano imienia');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    private validateLastName(lastName) {\r\n        let warn = this.form.find('.lname-group .lname-warn');\r\n        warn.text('');\r\n        if (!lastName) {\r\n            warn.text('Nie podano nazwiska');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    private validatePhone(phoneNumber) {\r\n        let warn = this.form.find('.phone-group .phone-warn');\r\n        warn.text('');\r\n        if (!phoneNumber) {\r\n            warn.text('Nie podano numeru telefonu');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validateDob(dob): boolean {\r\n        let warn = this.form.find('.dob-group .dob-warn');\r\n        warn.text('');\r\n        if (!dob) {\r\n            warn.text('Nie podano daty urodzenia');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validatePassword(password: string): boolean {\r\n        let warn = this.form.find('.pw-group .pw-warn');\r\n        if (!password) {\r\n            warn.text('Nie podano hasła');\r\n            return false;\r\n        }\r\n        else if (password.length < 8) {\r\n            warn.text('Hasło jest za ktotkie');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private validateEmail(email): boolean {\r\n        let warn = this.form.find('.email-group .email-warn');\r\n        warn.text('');\r\n        if (!email) {\r\n            warn.text('Brak adresu email');\r\n            return false;\r\n        }\r\n        if (!this.userValidator.isEmailValid(email)) {\r\n            warn.text('Nieprawidłowy adres');\r\n            return false;\r\n        }\r\n        RegisterService.checkAvailableEmail(email, (item: boolean) => {\r\n            warn.text('Adres zajęty');\r\n            return !item;\r\n        });\r\n        return true;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./scripts/view/RegisterView.ts","export class UserValidator {\r\n\r\n    public isEmailValid (email : string) : boolean {\r\n        let emailParts = email.split('@');\r\n        if (emailParts.length !== 2){\r\n            return false;\r\n        }\r\n        let domainParts = emailParts[1].split('.');\r\n        if (domainParts.length < 2){\r\n            return false;\r\n        }\r\n        // let regexp = new RegExp('[a-z][A-Z][0-9]','gi')\r\n        // let permittedSymbols = email.match('');\r\n        return true;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./scripts/utils/UserValidator.ts","import { RegisteredUser } from '../model/RegisteredUser';\r\nimport { App } from '../App'\r\nexport class RegisterService {\r\n\r\n    public static registerUser(user: RegisteredUser, successHandler, failHandler) {\r\n\r\n        let request = $.ajax({\r\n            url: 'register/registerUser',\r\n            context: document.body,\r\n            type: 'POST',\r\n            contentType: 'application/json; charset=utf-8',\r\n            dataType: 'text',\r\n            async: false,\r\n            data: JSON.stringify(user)\r\n        }).done(successHandler).fail(failHandler);\r\n\r\n    }\r\n\r\n    public static checkAvailableEmail(email: string, handler: any) {\r\n        let request = $.ajax({\r\n            url: 'register/userAvailable',\r\n            context: document.body,\r\n            type: 'GET',\r\n            contentType: 'application/json; charset=utf-8',\r\n            dataType: 'text',\r\n            async: false,\r\n            data: 'email=' + email,\r\n        }).done(handler);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./scripts/services/RegisterService.ts"],"sourceRoot":""}